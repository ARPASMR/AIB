#!/bin/bash
####################  GRASS_GB_1500m_rgmod.txt  ###################
#                                                                 # 
#  MARIA RANCI - 1 APRILE 2009                                    #
#  MARIA RANCI - 23 NOVEMBRE 2009  modifiche per raccordarsi      #
#                con codice fortran                               #
#  DAVIDE GALERI - MARZO 2011 modifiche per neve e IDI su script  #
#		   meteo e aggiunta trattamento -7557             #
#                  per codice f90                                 #
#  DAVIDE GALERI - MAGGIO/GIUGNO 2011 aggiunta ciclo maschere     #
#                  per eliminare errore su aree con tutto NULL    #
#  R.GRIMALDELLI - MARZO 2012 correzione trattamento nearest       #     
#                 neighbour                                       #
#  DAVIDE GALERI - MARZO 2012 correzione calcolo medie su dd del  #
#                  vettoriale AO                                  #
#  DAVIDE GALERI - MARZO 2013adattamento a Milanone Virtuale      #
#                                                                 #
#  GTER - MARZO 2020 quiet mode ai comandi GRASS                  #
#  GTER - GIUGNO 2020 adattamento a GRASS 7 e pulizia ulteriore
###################################################################
#
echo "########################################################"
echo "START GRASS_GB_1500m_rgmod.txt"
 echo "indice: $nomeindice"
 echo "IERI: $dataieri"
# echo "OGGI: $dataoggi"
# echo "DOMANI: $datadomani"
MESE=${dataieri:4:2}
#MESE=$(date +%m)
echo "mese: " $MESE ", indice " $nomeindice
echo "DIR_BASE= $DIR_BASE"
#
###################################################################
#  definizione di giorno, mese e anno per scrivere date nei titoli:
ANNOieri=${dataieri:0:4}
MESEieri=${dataieri:4:2}
GIORNOieri=${dataieri:6:2}
###################################################################
#
grezzi=grezzi
mask=mask
AO=AO
legenda=legenda
underscore=_
# Paths:
DIR_METEO_ANA=$DIR_DATA/meteo/ana
DIR_ANA=$DIR_DATA/indici/ana
#DIR_IMG_PNG=/home/meteo/programmi/fwi_grid/immagini/png
DIR_ANA_IMG=$DIR_DATA/immagini/ana
DIR_GRASS=$DIR_BASE/scripts/grass_work
DIR_STATS=$DIR_DATA/statistiche_cfs
#dir_tabella=$DIR_DATA/tabella
#dir legende (aggiunta GTER)
DIR_LEGENDE=$DIR_GRASS/legende
#titoli e accessori (aggiunta GTER)
DIR_TITOLI=$DIR_GRASS/titoli

# indici txt
fileinput=$DIR_ANA/$nomeindice$underscore$grezzi$underscore$dataieri.txt
fileoutmasktxt=$DIR_ANA/$nomeindice$underscore$mask$underscore$dataieri.txt
fileouttxt=$DIR_ANA/$nomeindice$underscore$dataieri.txt
# file txt statistiche
statitxt=$DIR_STATS/$nomeindice$underscore$dataieri.txt
# Png
fileoutmaskpng=$DIR_ANA_IMG/$nomeindice$underscore$mask$underscore$dataieri.png
fileoutAOpng=$DIR_ANA_IMG/$nomeindice$underscore$AO$underscore$dataieri.png
# Mappe gif
fileoutmaskgif=$DIR_ANA_IMG/$nomeindice$underscore$mask$underscore$dataieri.gif
fileoutAOlegendagif=$DIR_ANA_IMG/$nomeindice$underscore$legenda$underscore$dataieri.gif
# ini
filescale=$DIR_LEGENDE/fwiscale.ini


#
colore1=0:100:0
colore2=50:205:50
colore3=255:255:0
colore4=255:127:0
colore5=255:0:0
colore6=139:35:35
#
#####################################################################
echo "impostazione regione di calcolo"            
g.region -d --q
#
echo $fileinput
#INDICE
echo "importazione raster dell'indice"
g.remove -f type=raster name=indici_tmp --q
r.in.gdal -o  input=$fileinput output=indici_tmp --q
#
# calcola una nuova mappa dell'indice (solo dove non c'Ã¨ neve per rimuovere i -7557)
r.mapcalc expression="indici=if(indici_tmp>-800,indici_tmp,null())" --o --quiet
#
#####################################################################
# tolgo dall indice i punti con IDI basso
g.remove -f type=raster name=indici_bucato --q
r.mapcalc expression="indici_bucato=if(IDI>0,indici,null())" --o --quiet

#  TAPPA BUCHI INDICE DOVE IDI =0 CON NEAREST NEIGHBOUR 
# moltiplica * 1000 (perche' r.surf.idw approssima all'unita') 
g.remove -f type=raster name=indici_permille --q
r.mapcalc expression="indici_permille=int(indici_bucato*1000)" --o --quiet

# ricalcola con nearest neighbour 
g.remove -f type=raster name=indici_calc_permille --q
r.surf.idw input=indici_permille  output=indici_calc_permille npoints=1 --q 

# divide * 1000 
g.remove -f type=raster name=indici_calc --q
r.mapcalc expression="indici_calc=indici_calc_permille/1000" --o --quiet

# maschera su regione 
v.to.rast use=val value=1 input=AO output=maschera_regione --q --overwrite
#r.mask input=AO --q
r.mapcalc expression="indici_calc=indici_calc*maschera_regione" --o --quiet
g.remove -f type=raster name=maschera_regione --q


# creazione indici con valori -7557 nei punti di neve, per f90
g.remove -f type=raster name=indiciout --q
r.mapcalc expression="indiciout=if(indici_tmp<0,indici_tmp,indici_calc)" --o --quiet
#r.mapcalculator amap=indici_calc bmap=indici_tmp formula="if(B<0,B,A)" outfile=indiciout --q
echo "Esportazione in file di testo"
r.out.gdal format=AAIGrid input=indiciout output=$fileouttxt --q --overwrite
#r.out.arc input=indiciout output=$fileouttxt --q

#
#####################################################################
# imposta la cop nevosa come maschera di lavoro dei raster
#r.mask input=neve maskcats=1 --q
r.mapcalc expression="maschera_neve=neve/neve" --o --quiet
# calcola nuova mappa dell'indice (solo dove non c'e' neve)
g.remove -f type=raster name=indici_IDI_neve --q
r.mapcalc expression="indici_IDI_neve=indici_bucato*maschera_neve" --o --quiet
#r.mapcalculator amap=indici_bucato formula="A" outfile=indici_IDI_neve --q
g.remove -f type=raster name=maschera_neve --q
#
#####################################################################
#
echo "maschera con aree non bruciabili"
#r.mask input=AB maskcats=1
# calcola nuova mappa dell'indice mascherato
g.remove -f type=raster name=indici_IDI_neve_bruc --q
r.mapcalc expression="indici_IDI_neve_bruc=if(AB>0,indici_IDI_neve,null())" --o --quiet
#r.mapcalculator amap=indici_IDI_neve bmap=AB formula="if(B>0,A,null())" outfile=indici_IDI_neve_bruc --q
#g.remove rast=MASK
#
#####################################################################
#
g.region -d --q
echo "esportazione in file di testo"
r.out.gdal format=AAIGrid input=indici_IDI_neve_bruc output=$fileoutmasktxt --q --overwrite
# r.out.arc input=indici_IDI_neve_bruc output=$fileoutmasktxt --q
#####################################################################
#
echo "salvataggio immagini"
export GRASS_RENDER_IMMEDIATE=cairo
export GRASS_RENDER_FILE=$fileoutmaskpng
#export GRASS_RENDER_WIDTH=800
#export GRASS_RENDER_HEIGHT=600
export GRASS_RENDER_TRUECOLOR=TRUE
export GRASS_RENDER_TRANSPARENT=TRUE
export GRASS_RENDER_FILE_READ=TRUE
# export GRASS_PNGFILE=$fileoutmaskpng
# d.mon --quiet start=PNG
# d.mon --quiet select=PNG
echo " Applico la scala colori con l'opzione color=fwi$underscore$nomeindice$underscore$MESE"
r.colors --quiet map=indici_IDI_neve_bruc rules=$DIR_LEGENDE/fwi$underscore$nomeindice$underscore$MESE 
d.rast --quiet map=indici_IDI_neve_bruc
#sintassi GRASS7
d.vect --quiet map=AO type=point,line,boundary,face display=shape icon=basic/x size=8 layer=1      \
               width=0 wscale=1 color=black fill_color=none label_layer=1 \
               label_color=red label_bgcolor=none label_bcolor=none label_size=8 font=romans xref=left yref=center
# d.out.file output=$fileoutputpng res=2 format=png compression=0
# d.mon --quiet stop=PNG
convert  $fileoutmaskpng -transparent white $fileoutmaskpng 
#
# aggiunta del titolo
convert -background white -fill black -font Helvetica-Bold -pointsize 30 label:"$nomeindice - $GIORNOieri/$MESEieri/$ANNOieri - ANALISI" $DIR_TITOLI/titoloindice.gif
#convert -size 1380x960 xc:white \
convert -size 700x500 xc:white \
        -draw "image over 50,25   0,0 '$fileoutmaskpng'  "             \
        -draw "image over 100,0   0,0 '$DIR_TITOLI/titoloindice.gif'      " $fileoutmaskgif 
#
#####################################################################
#                                                                   #
#####################################################################
#
echo "legge scale dell'indice"
#-----------------------------------------------------
#
# CONTROLLO SU ESISTENZA FILE 
   if [ ! -e $filescale ]; then
  	echo "$filescale : non esiste"
  	exit 1
   elif [ ! -r $filescale ]; then
  	echo "$filescale: errore in lettura"
  	exit 2
   fi

#
# INDIVIDUO INDICE
 case "$nomeindice" in
# trova corrispondenza esatta in fwiscale.ini e determina il numero di riga
  "mc")   numriga=`grep -nx "MC"   $filescale | awk -F : '{print $1}'`;;
  "ffmc") numriga=`grep -nx "FFMC" $filescale | awk -F : '{print $1}'`;;
  "dmc")  numriga=`grep -nx "DMC"  $filescale | awk -F : '{print $1}'`;;
  "dc")   numriga=`grep -nx "DC"   $filescale | awk -F : '{print $1}'`;;
  "isi")  numriga=`grep -nx "ISI"  $filescale | awk -F : '{print $1}'`;;
  "bui")  numriga=`grep -nx "BUI"  $filescale | awk -F : '{print $1}'`;;
  "fwi")  numriga=`grep -nx "FWI"  $filescale | awk -F : '{print $1}'`;;
  "dsr")  numriga=`grep -nx "DSR"  $filescale | awk -F : '{print $1}'`;;
  *) echo $nomeindice " indice non riconosciuto " ;;
  *) exit 9 ;;
 esac
#echo numriga=$numriga
#
# INDIVIDUO MESE 
X=${MESE#0}
punta=$((X+1))
#
# RICAVO SOGLIE
 aux=$((numriga+1))
L1=`awk 'NR=='$aux'' $filescale | awk -F " " '{print $'$punta'}'`
 aux=$((numriga+2))
L2=`awk 'NR=='$aux'' $filescale | awk -F " " '{print $'$punta'}'`
 aux=$((numriga+3))
L3=`awk 'NR=='$aux'' $filescale | awk -F " " '{print $'$punta'}'`
 aux=$((numriga+4))
L4=`awk 'NR=='$aux'' $filescale | awk -F " " '{print $'$punta'}'`
 aux=$((numriga+5))
L5=`awk 'NR=='$aux'' $filescale | awk -F " " '{print $'$punta'}'`
echo "L1="$L1" | "
echo "L2="$L2" | "
echo "L3="$L3" | "
echo "L4="$L4" | "
echo "L5="$L5" | "
#-------------------------------------------------------

echo "Aggregazione su Aree Omogenee e salvataggio immagini"
# valuta le statistiche per le aree omogenee sul raster indice corretta precedentemente
v.db.dropcolumn --q map=AO columns="FI_median,FI_number,FI_minimum,FI_maximum,FI_average,FI_range,FI_stddev,FI_variance,FI_coeff_var,FI_sum,FI_first_quartile,FI_third_quartile,FI_percentile_90,FI_mean"

v.rast.stats -c map=AO raster=indici_IDI_neve_bruc colprefix=FI --q

v.db.addcolumn map=AO columns="FI_mean real" --q

v.db.update map=AO column=FI_mean query_column="round(FI_average,1)"


# questa parte sostituita con comando GRASS precedente possibile con DB nuovo DB sqlite 
# Esporto Statistiche Univariate per area (tabelle CFS)
#v.db.select -c map=AO layer=1 column=NOME,FI_number,FI_minimum,FI_maximum,FI_average,FI_range,FI_stddev,FI_varianc,FI_coeff_v,FI_sum fs="|" file=$statitxt --overwrite --q
# Esporto Media per arrotondamento
#v.db.select --q --overwrite -c map=AO layer=1 column=cat,FI_average fs=" " file=$DIR_GRASS/mean_fi.txt





#echo "Fine v.db.select  - inizio roba bash poco chiara"
#cp $DIR_GRASS/mean_fi.txt $dir_tabella/$nomeindice$underscore$dataieri.txt
# calcolo delle medie dell'indice sulle aree omogenee 
#for ((t=1; t<=15; t++))
#do
#        head -$t $DIR_GRASS/mean_fi.txt | tail -1 > $DIR_GRASS/b.txt
#        read cat mean < $DIR_GRASS/b.txt
#        echo "round (${mean})" | bc -l $DIR_GRASS/arrot.b > $DIR_GRASS/fi.txt
#        read FI < $DIR_GRASS/fi.txt
#        echo "update AO set FI_average=${FI} where cat=${t}" | db.execute
#done




echo "Export immagini"
export GRASS_RENDER_IMMEDIATE=cairo
export GRASS_RENDER_FILE=$fileoutAOpng
#export GRASS_RENDER_WIDTH=800
#export GRASS_RENDER_HEIGHT=600
export GRASS_RENDER_TRUECOLOR=TRUE
export GRASS_RENDER_TRANSPARENT=TRUE
export GRASS_RENDER_FILE_READ=TRUE
#export GRASS_PNGFILE=$fileoutAOpng
#d.mon --quiet start=PNG
#d.mon --quiet select=PNG

############ maschera con neve e aree non bruciabili per aiutare interpretazione del grafico #############

d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean <= $L1"                     \
              color=black fcolor=$colore1
d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean > $L1 AND FI_mean <= $L2"   \
              color=black fcolor=$colore2
d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean > $L2 AND FI_mean <= $L3"   \
              color=black fcolor=$colore3
d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean > $L3 AND FI_mean <= $L4"   \
              color=black fcolor=$colore4
d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean > $L4 AND FI_mean <= $L5"   \
              color=black fcolor=$colore5
d.vect --quiet map=AO type=area display=shape attrcol=FI_mean where="FI_mean > $L5"                      \
              color=black fcolor=$colore6
d.vect --quiet map=AO type=point,line,boundary,face display=shape icon=basic/x size=8 layer=1      \
               width=0 wscale=1 color=black fill_color=none label_layer=1 
               #label_color=red label_bgcolor=none label_bcolor=none label_size=8 font=romans xref=left yref=center
v.label --quiet map=AO type=centroid layer=1 column=FI_mean labels=ao_mean xoffset=0 yoffset=0 size=4200      \
               color=black rotation=0 width=1 hcolor=none hwidth=2 background=yellow border=black opaque=yes
############################################################################################################

#lcolor=black bgcolor=230:230:48 bcolor=red                  \
#              lsize=14 font=romans xref=center yref=center

#d.font     font=romans
d.labels --quiet   label=ao_mean
# d.mon --quiet stop=PNG
#
echo "aggiunta trasparenza per la pubblicazione su WEB"
convert  $fileoutAOpng -transparent white $fileoutAOpng 
#
echo "aggiunta didascalie "
convert -background white -fill black -font Helvetica-Bold -pointsize 15 label:Legenda $DIR_TITOLI/label_legenda.gif
convert -background white -fill black -font Helvetica-Bold -pointsize 30 label:"$nomeindice - $GIORNOieri/$MESEieri/$ANNOieri - ANALISI" $DIR_TITOLI/titolo.gif
#convert -size 1380x960 xc:white \
convert -size 700x500 xc:white \
        -draw "image over 100,25   0,0 '$fileoutAOpng'  "             \
        -draw "image over  20,150 100,0 '$DIR_TITOLI/label_legenda.gif'" \
        -draw "image over  20,200 100,0 '$DIR_TITOLI/legenda.png'"       \
        -draw "image over 100,0   0,0 '$DIR_TITOLI/titolo.gif'      " $fileoutAOlegendagif
#convert  $fileoutAOlegendagif -transparent white $fileoutAOlegendagif 


echo "END GRASS_GB_1500m_rgmod.txt"
echo "########################################################"
